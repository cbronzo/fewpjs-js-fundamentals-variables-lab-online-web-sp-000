{
  "stats": {
    "suites": 4,
    "tests": 8,
    "passes": 6,
    "pending": 0,
    "failures": 2,
    "start": "2021-01-25T02:04:35.103Z",
    "end": "2021-01-25T02:04:35.597Z",
    "duration": 494
  },
  "tests": [
    {
      "title": "is set as Scuber",
      "fullTitle": "index.js companyName is set as Scuber",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined as a const",
      "fullTitle": "index.js companyName is defined as a const",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared as equal to Chelsea",
      "fullTitle": "index.js mostProfitableNeighborhood is declared as equal to Chelsea",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not raise error if the mostProfitableNeighborhood is changed",
      "fullTitle": "index.js mostProfitableNeighborhood does not raise error if the mostProfitableNeighborhood is changed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is not defined as a const",
      "fullTitle": "index.js mostProfitableNeighborhood is not defined as a const",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "Expected mostProfitableNeighborhood not to be a const: expected '// Code your solution in this file!\\n\\nconst companyName = \\'Scuber\\';\\n\\nconst mostProfitableNeighborhood = \\'Chelsea\\';\\n\\nconst companyCe0 = \\'Susan Smith\\';' not to match /const mostProfitableNeighborhood/",
        "showDiff": false,
        "actual": "// Code your solution in this file!\n\nconst companyName = 'Scuber';\n\nconst mostProfitableNeighborhood = 'Chelsea';\n\nconst companyCe0 = 'Susan Smith';",
        "stack": "AssertionError: Expected mostProfitableNeighborhood not to be a const: expected '// Code your solution in this file!\\n\\nconst companyName = \\'Scuber\\';\\n\\nconst mostProfitableNeighborhood = \\'Chelsea\\';\\n\\nconst companyCe0 = \\'Susan Smith\\';' not to match /const mostProfitableNeighborhood/\n    at Context.<anonymous> (test/indexTest.js:29:25)"
      }
    },
    {
      "title": "is declared as equal to Susan Smith",
      "fullTitle": "index.js companyCeo is declared as equal to Susan Smith",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: companyCeo is not defined\n    at Context.<anonymous> (test/indexTest.js:35:14)",
        "message": "companyCeo is not defined"
      }
    },
    {
      "title": "does not raise error if the companyCeo is changed",
      "fullTitle": "index.js companyCeo does not raise error if the companyCeo is changed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is not defined as a const",
      "fullTitle": "index.js companyCeo is not defined as a const",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "is not defined as a const",
      "fullTitle": "index.js mostProfitableNeighborhood is not defined as a const",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "Expected mostProfitableNeighborhood not to be a const: expected '// Code your solution in this file!\\n\\nconst companyName = \\'Scuber\\';\\n\\nconst mostProfitableNeighborhood = \\'Chelsea\\';\\n\\nconst companyCe0 = \\'Susan Smith\\';' not to match /const mostProfitableNeighborhood/",
        "showDiff": false,
        "actual": "// Code your solution in this file!\n\nconst companyName = 'Scuber';\n\nconst mostProfitableNeighborhood = 'Chelsea';\n\nconst companyCe0 = 'Susan Smith';",
        "stack": "AssertionError: Expected mostProfitableNeighborhood not to be a const: expected '// Code your solution in this file!\\n\\nconst companyName = \\'Scuber\\';\\n\\nconst mostProfitableNeighborhood = \\'Chelsea\\';\\n\\nconst companyCe0 = \\'Susan Smith\\';' not to match /const mostProfitableNeighborhood/\n    at Context.<anonymous> (test/indexTest.js:29:25)"
      }
    },
    {
      "title": "is declared as equal to Susan Smith",
      "fullTitle": "index.js companyCeo is declared as equal to Susan Smith",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: companyCeo is not defined\n    at Context.<anonymous> (test/indexTest.js:35:14)",
        "message": "companyCeo is not defined"
      }
    }
  ],
  "passes": [
    {
      "title": "is set as Scuber",
      "fullTitle": "index.js companyName is set as Scuber",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined as a const",
      "fullTitle": "index.js companyName is defined as a const",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared as equal to Chelsea",
      "fullTitle": "index.js mostProfitableNeighborhood is declared as equal to Chelsea",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not raise error if the mostProfitableNeighborhood is changed",
      "fullTitle": "index.js mostProfitableNeighborhood does not raise error if the mostProfitableNeighborhood is changed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not raise error if the companyCeo is changed",
      "fullTitle": "index.js companyCeo does not raise error if the companyCeo is changed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is not defined as a const",
      "fullTitle": "index.js companyCeo is not defined as a const",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}